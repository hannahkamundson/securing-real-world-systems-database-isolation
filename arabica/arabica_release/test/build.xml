<project>

	<property file="build.properties"/>
	<!--NOTE: CONFIGURE THESE PROPERTIES in YOUR OWN build.properties file. Do not modify the build.xml file to change them!-->
	<!--<property name="bootclasspath.dir" value="/home/joseph/robustatrunk/librobusta/boot/"/>-->
	<!--<property name="robustajvm.dir" value="/home/joseph/robustatrunk/openjdk/build/linux-i586/j2re-image/bin/"/>-->
	<!--<property name="vanillajvm.dir" value="/home/joseph/sources/jdk/vanilla/openjdk/build/linux-i586/bin/"/>-->

	<!--these properties should not need to be changed-->
	<property name="src.dir" value="src"/>
	<property name="build.dir"   value="build"/>
	<property name="classes.dir" value="${build.dir}/classes"/>
   	<property name="lib.dir"     value="lib"/>

	<path id="classpath">
		<pathelement location="${classes.dir}"/>
        	<fileset dir="${lib.dir}" includes="*.jar"/>
	</path>

	<target name="clean-java">
		<delete dir="${build.dir}"/>
	</target>

	<target name="clean">
		<delete dir="${build.dir}"/>
		<exec executable="scons">
			<arg line=" -c &quot;libs&quot;" />
		</exec>
	</target>

	<target name="compile" depends="clean-java">
		<mkdir dir="${classes.dir}"/>
		<javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" excludes="SpreadConnection.java broken/**/*.java">
		</javac>
	</target>

	<target name="libs">
		<exec executable="scons">
			<arg line="&quot;libs&quot;"/>
		</exec>
	</target>

	<target name="vanilla-env">
		<echo>Normal Environment</echo>
		<property name="environment" value="vanilla"/>
		<property name="JVM.dir" value="${vanillajvm.dir}java"/>
		<property name="lib.path" value="./lib/normal/"/>
	</target>

	<target name="stub-env">
	        <echo>Stub Environment</echo>
		<property name="environment" value="stub"/>
		<property name="JVM.dir" value="${vanillajvm.dir}java"/>
		<property name="lib.path" value="./lib/stub/"/>
	</target>

	<target name="default-env">
		<echo>Default Environment</echo>
		<property name="environment" value="default"/>
		<property name="JVM.dir" value="java"/>
		<property name="lib.path" value="./lib/normal/"/>
	</target>

	<target name="junit" depends="compile,libs">
		<junit printsummary="yes" jvm="${JVM.dir}" fork="true">
			<jvmarg value="-Djava.security.manager"/>
			<!--<jvmarg value="-Xbootclasspath/a:${bootclasspath.dir}"/>-->
			<jvmarg value="-Djava.library.path=${lib.path}"/>
			<!--<jvmarg value="-Djava.security.debug=all"/>-->
			<classpath>
				<path refid="classpath"/>
            		</classpath>
			<formatter type="brief" usefile="false"/>
            
            		<batchtest fork="yes">
                		<fileset dir="${classes.dir}">
					<include name="**/TextPdfTest.class"/>
					<!--<include name="**/JPEGDecoderTest.class"/>-->
					<!--<exclude name="**/*GzipTest.class"/>-->
					<!--<exclude name="**/JPEGDecoderTest.class"/>-->
				</fileset>
           		</batchtest>
        	</junit>
	</target>

	<target name="java-single"  depends="">
		<java jvm="${JVM.dir}" classname="math.StrictMathTest" fork="true">
			<jvmarg value="-Djava.library.path=${lib.path}"/>
			<classpath>
				<path refid="classpath"/>
            		</classpath>
		</java>
	</target>

	<target name="junit-micro" depends="">
		<junit printsummary="yes" jvm="${JVM.dir}" fork="true">
			<jvmarg value="-Djava.security.manager"/>
			<jvmarg value="-Djava.library.path=${lib.path}"/>
			<jvmarg value="-Xms512m"/>
			<jvmarg value="-Xmx1024m"/>
			<!--<jvmarg value="-Djava.security.debug=all"/>-->
			<classpath>
				<path refid="classpath"/>
            		</classpath>
			<formatter type="brief" usefile="false"/>
            
            		<batchtest fork="yes">
                		<fileset dir="${classes.dir}">
					<include name="**/HelloWorldTest.class"/>
					<!--<exclude name="**/TextPdfTest.class"/>-->
					<exclude name="**/*GzipTest.class"/>
					<exclude name="**/ECTest.class"/>
					<exclude name="**/JPEGDecoderTest.class"/>
					<exclude name="**/SpreadTest.class"/>
					<exclude name="**/ReadlineTest.class"/>
				</fileset>
           		</batchtest>
        	</junit>
	</target>

	<target name="junit-agent" depends="">
		<junit printsummary="yes" jvm="${JVM.dir}" fork="false">
			<jvmarg value="-Djava.security.manager"/>
			<!--<jvmarg value="-Xbootclasspath/a:${bootclasspath.dir}"/>-->
			<jvmarg value="-Djava.library.path=${lib.path}"/>
			<jvmarg value="-Xms512m"/>
			<jvmarg value="-Xmx1024m"/>
			<jvmarg value="-agentpath:/home/username/librobusta/.libs/librobusta.so"/>
			<!--<jvmarg value="-Djava.security.debug=all"/>-->
			<classpath>
				<path refid="classpath"/>
            		</classpath>
			<formatter type="brief" usefile="false"/>
            
            		<batchtest fork="yes">
                		<fileset dir="${classes.dir}">
					<include name="**/HelloWorldTest.class"/>
					<exclude name="**/TextPdfTest.class"/>
					<exclude name="**/MonitorCounterTest.class"/>
				</fileset>
           		</batchtest>
        	</junit>
	</target>


	<target name="junit-fast" depends="">
		<junit printsummary="yes" jvm="${JVM.dir}" fork="true">
			<jvmarg value="-Djava.security.manager"/>
			<!--<jvmarg value="-Xbootclasspath/a:${bootclasspath.dir}"/>-->
			<jvmarg value="-Djava.library.path=${lib.path}"/>
			<jvmarg value="-Xms512m"/>
			<jvmarg value="-Xmx1024m"/>
			<!--<jvmarg value="-Djava.security.debug=all"/>-->
			<classpath>
				<path refid="classpath"/>
            		</classpath>
			<formatter type="brief" usefile="false"/>
            
            		<batchtest fork="yes">
                		<fileset dir="${classes.dir}">
					<include name="**/JNIWrapTest.class"/>
					<!--<exclude name="**/*GzipTest.class"/>-->
					<!--<exclude name="**/ECTest.class"/>-->
					<!--<exclude name="**/JPEGDecoderTest.class"/>-->
					<!--<exclude name="**/SpreadTest.class"/>-->
					<exclude name="**/ReadlineTest.class"/>
				</fileset>
           		</batchtest>
        	</junit>
	</target>

	<target name="punit" depends="compile,libs">
		<!--<echo>${JVM.dir}</echo>-->
		<java fork="true" classname="fixture.Runner" classpathref="classpath" jvm="${JVM.dir}">
			<jvmarg value="-Djava.security.manager"/>
			<!--<jvmarg value="-Djava.security.debug=all"/>-->
			<!--<jvmarg value="-Xbootclasspath/a:${bootclasspath.dir}"/>-->
			<jvmarg value="-Djava.library.path=${lib.path}"/>
			<arg value = "${environment}"/>
		</java>
	</target>

	<target name="punit-fast" depends="">
		<!--<echo>${JVM.dir}</echo>-->
		<java fork="true" classname="fixture.Runner" classpathref="classpath" jvm="${JVM.dir}">
			<jvmarg value="-Djava.security.manager"/>
			<jvmarg value="-Djava.library.path=${lib.path}"/>
			<arg value = "${environment}"/>
		</java>
	</target>

	<target name="punit-agent" depends="">
	  <java fork="true" classname="fixture.Runner" classpathref="classpath" jvm="${JVM.dir}">
	    <jvmarg value="-Djava.security.manager"/>
	    <jvmarg value="-Djava.library.path=${lib.path}"/>
	    <jvmarg value="-agentpath:/home/username/robustatrunk/librobusta/.libs/librobusta.so"/>
	    <arg value="${environment}"/>
	  </java>
	</target>

	<target name="java-single-vanilla" depends="vanilla-env,java-single"/>

	<target name="junit-micro-vanilla" depends="vanilla-env, junit-micro"/>

	<target name="junit-agent-stub" depends="stub-env, junit-agent"/>

	<target name="junit-vanilla" depends="vanilla-env,junit"/>

	<target name="junit-default" depends="default-env,junit"/>

	<target name="punit-vanilla" depends="vanilla-env,punit"/>

	<target name="punit-default" depends="default-env,punit"/>
	
	<target name="junit-vanilla-fast" depends="vanilla-env, junit-fast"/>

	<target name="punit-vanilla-fast" depends="vanilla-env, punit-fast"/>

	<target name="punit-stub-agent" depends="stub-env, punit-agent"/>
</project>
